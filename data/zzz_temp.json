<div class="hover-text">hover me
    <span class="tooltip-text" id="delay">I'm a tooltip!</span>
</div>
(delay devrait être une classe!)

{
    "id":101,
    "name":"Genius",
    "pic":"genius",
    "cat":"vehicles",
    "kind":"zero-tanks",
    "squads":5,
    "squadSize":3,
    "crew":3,
    "hp":70,
    "armor":12,
    "size":24,
    "stealth":5,
    "speed":2,
    "ap":17,
    "maxSalvo":2,
    "weapon":{
        "name":"Mitrailleuse",
        "cost":3,
        "range":2,
        "elevation":1,
        "noStab":true,
        "noise":4,
        "rof":24,
        "accuracy":17,
        "dca":1.15,
        "power":11,
        "armors":0.77,
        "aoe":"unit",
        "sound":"mit_mid",
        "ammo":["standard","scrap","hollow","perfo","teflon","tungsten","uranium","explosive","incendiaire","timonium","salite","adamantium","dunium","freeze"]
    },
    "weapon2":{
        "name":"Boutoir",
        "cost":2,
        "range":0,
        "noFly":true,
        "noDef":true,
        "noBig":true,
        "noBis":true,
        "free":true,
        "noDatt":true,
        "noShield":true,
        "rof":6,
        "accuracy":22,
        "power":14,
        "aoe":"brochette",
        "sound":"belier",
        "ammo":["standard","belier-spike"]
    },
    "protection":[],
    "equip":["aucun","chargeur1","wstab","g2motor","snorkel","belier","moisso","e-flash","e-radar","waterproof","e-control","e-road"],
    "log3eq":["snorkel"],
    "autoEq":["e-road","g2motor","chargeur1","e-radar"],
    "moveCost":2.4,
    "maxFlood":2,
    "maxScarp":2,
    "maxVeg":3,
    "skills":["b_light","fortif","longshot","defense","mecano","maycamo","ravitaillement","cleaning","dealer","nitro","sudu","light","badcrewsave","recupcit","recupres","caterp","kzin","treuil","routes","hveh"],
    "mecanoCost":6,
    "maxSkill":24,
    "maxDrug":18,
    "fuzz":2,
    "deathFx":"planeexploair1",
    "mvSnd":"tank"
},

function getBonusEqOld(unit) {
    // console.log("CHECK BONUS EQ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
    let bonusEqName = '';
    if (unit.autoEq != undefined) {
        // console.log(unit.autoEq);
        if (unit.autoEq.length >= 1) {
            unit.autoEq.forEach(function(equipName) {
                if (bonusEqName === '') {
                    let equip = getEquipByName(equipName);
                    // console.log(equip);
                    let compReqOK = checkCompReq(equip);
                    if (checkSpecialEquip(equip,unit)) {
                        compReqOK = false;
                    }
                    // console.log('compReqOK='+compReqOK);
                    if (compReqOK) {
                        if (equip.autoComp.length === 2) {
                            let autoCompName = equip.autoComp[0];
                            let autoCompLevel = equip.autoComp[1];
                            if (playerInfos.comp[autoCompName] >= autoCompLevel) {
                                bonusEqName = equipName;
                            }
                        }
                    }
                }
            });
        }
    }
    if (bonusEqName === '') {
        if (unit.log3eq != undefined) {
            // console.log(unit.log3eq);
            if (unit.log3eq.length >= 1) {
                unit.log3eq.forEach(function(equipName) {
                    if (bonusEqName === '') {
                        let equip = getEquipByName(equipName);
                        // console.log(equip);
                        let compReqOK = checkCompReq(equip);
                        if (checkSpecialEquip(equip,unit)) {
                            compReqOK = false;
                        }
                        // console.log('compReqOK='+compReqOK);
                        if (compReqOK) {
                            if (playerInfos.comp.log === 3 && equipName != 'garage') {
                                // console.log('log3');
                                bonusEqName = equipName;
                            } else if (equip.autoComp.length === 2) {
                                let autoCompName = equip.autoComp[0];
                                let autoCompLevel = equip.autoComp[1];
                                if (playerInfos.comp[autoCompName] >= autoCompLevel) {
                                    bonusEqName = equipName;
                                }
                            }
                        }
                    }
                });
            }
        }
    }
    console.log('bonusEqName='+bonusEqName);
    return bonusEqName;
};

"weapon":{
    "name":"Tromblon",
    "cost":4,
    "range":0,
    "rof":5,
    "accuracy":14,
    "dca":0.5,
    "power":10,
    "aoe":"squad",
    "sound":"mortier",
    "ammo":["grenade","grenade-flashbang","grenade-gaz","grenade-antichar","grenade-incendiaire","grenade-nanite"],
    "maxAmmo":24,
    "ravitBld":"Poudrière"
},
"weapon":{
    "name":"Shotgun",
    "cost":3,
    "range":0,
    "rof":8,
    "accuracy":17,
    "power":8,
    "armors":1.35,
    "aoe":"brochette",
    "sound":"calibre_shotgun",
    "ammo":["standard","scrap","snake","incendiaire","ac-tungsten","ac-uranium","ac-timonium","ac-salite","ac-adamantium","ac-dunium","ac-freeze"]
},
=(AZ2*$AX2)+(AZ3*$AX3)+(AZ4*$AX4)+(AZ5*$AX5)+(AZ6*$AX6)+(AZ7*$AX7)+(AZ8*$AX8)+(AZ9*$AX9)+(AZ10*$AX10)+(AZ11*$AX11)+(AZ12*$AX12)
autre son
rof 1/2
seconde arme tir à 1+1 (accuracy 10) noFly

<svg id="svgfilters" aria-hidden="true" style="position: absolute; width: 0; height: 0; overflow: hidden;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <defs>
        <filter id="dark" x="0%" y="0%" width="100%" height="100%">
            <feTurbulence type="fractalNoise" baseFrequency="0.005" result="fluffyNoise" numOctaves="5" />
            <feColorMatrix in="fluffyNoise" type="matrix" values=".07 .07 .07 0 0 .07 .07 .07 0 0 .07 .07 .07 0 0 0 0 0 .25 0"/>
            <feComposite operator="in" in2="SourceGraphic" result="monoFluffyNoise"/>
            <feBlend in="SourceGraphic" in2="monoFluffyNoise" mode="screen" />
        </filter>
        <filter id="fluffy" x="0%" y="0%" width="100%" height="100%">
            <feTurbulence type="fractalNoise" baseFrequency="0.008" result="fluffyNoise" numOctaves="5" />
            <feColorMatrix in="fluffyNoise" type="matrix" values="0 .2 .2 .2 0 0 .2 .2 .2 0 0 .2 .2 0 0 0 0 0 .7 0"/>
            <feComposite operator="in" in2="SourceGraphic" result="monoFluffyNoise"/>
            <feBlend in="SourceGraphic" in2="monoFluffyNoise" mode="screen" />
        </filter>
    </defs>
</svg>

start of showMap()
if (!playerInfos.onShip && playerInfos.clouds) {
    if (zone[0].dark) {
        $('#zone_map').css("filter","url(#dark) contrast(110%)");
    } else {
        $('#zone_map').css("filter","url(#fluffy) saturate(85%) contrast(140%)");
    }
} else {
    $('#zone_map').css("filter","");
}

// function checkFlyTarget(weapon,batType) {
//     if (weapon.noFly && batType.skills.includes('fly')) {
//         return false;
//     } else {
//         if (weapon.noGround && !batType.skills.includes('fly') && !batType.skills.includes('sauteur')) {
//             return false;
//         } else {
//             return true;
//         }
//     }
// };


// function anyAlienInRange(myBat,weapon) {
//     let tileId = myBat.tileId;
//     let distance;
//     let inRange = false;
//     let batIndex;
//     let batType;
//     aliens.forEach(function(bat) {
//         if (bat.loc === "zone") {
//             let guidageOK = checkGuidage(weapon,bat);
//             if (isInRange(myBat,bat.tileId,weapon) || guidageOK) {
//                 batType = getBatType(bat);
//                 if (weapon.ammo.includes('marquage') && weapon.name != 'Fragger' && bat.tags.includes('fluo')) {
//                     // Déjà marqué
//                 } else {
//                     if (weapon.noFly && batType.skills.includes('fly')) {
//                         // Fly hors portée
//                     } else {
//                         if (weapon.noGround && !batType.skills.includes('fly') && !batType.skills.includes('sauteur')) {
//                             // Ground hors portée
//                         } else {
//                             if (batType.skills.includes('invisible') || bat.tags.includes('invisible')) {
//                                 // Alien invisible
//                                 distance = calcDistance(myBat.tileId,bat.tileId)
//                                 if (distance === 0 || guidageOK || bat.tags.includes('fluo')) {
//                                     inRange = true;
//                                 }
//                             } else {
//                                 if (zone[0].dark && !undarkNow.includes(bat.tileId)) {
//                                     // Alien dans l'ombre
//                                 } else {
//                                     inRange = true;
//                                 }
//                             }
//                         }
//                     }
//                 }
//             }
//         }
//     });
//     return inRange;
// };


{
    "id":64,
    "result":"Energie",
    "cost":{"Eau":40,"Uranium":3},
    "compReq":{"energ":2},
    "bldReq":["Centrale nucléaire","Soute"],
    "batch":50
},
{
    "id":68,
    "result":"Energie",
    "cost":{"Eau":40,"Plutonium":3},
    "compReq":{},
    "bldReq":["Centrale nucléaire","Soute"],
    "batch":50
},
{
    "id":56,
    "result":"Energie",
    "cost":{"Eau":25,"Uranium":4},
    "compReq":{},
    "bldReq":["Centrale SMR","Soute"],
    "batch":50
},
{
    "id":69,
    "result":"Energie",
    "cost":{"Eau":25,"Plutonium":5},
    "compReq":{"energ":1},
    "bldReq":["Centrale SMR","Soute"],
    "batch":50
},
{
    "id":70,
    "result":"Energie",
    "cost":{"Eau":25},
    "unique":true,
    "compReq":{},
    "bldReq":["Centrale solaire","Soute"],
    "batch":50,
    "creaNum":500
},
{
    "id":80,
    "result":"Scrap",
    "cost":{"Fer":2,"Carbone":2,"Végétaux":4},
    "compReq":{"mat":1,"const":1},
    "bldReq":["Atelier"],
    "batch":3,
    "creaNum":20,
    "deg":true
},
{
    "id":81,
    "result":"Scrap",
    "cost":{"Fer":2,"Carbone":2,"Végétaux":2,"Energie":1},
    "compReq":{"mat":2,"const":2,"ind":1},
    "bldReq":["Chaîne de montage"],
    "batch":4,
    "deg":true
},
{
    "id":82,
    "result":"Scrap",
    "cost":{"Compo1":2},
    "compReq":{"tri":1},
    "bldReq":["Décharge","Atelier"],
    "batch":1,
    "creaNum":20,
    "deg":true
},
{
    "id":83,
    "result":"Scrap",
    "cost":{"Compo2":3,"Energie":1},
    "compReq":{"tri":1,"const":1},
    "bldReq":["Décharge","Atelier"],
    "batch":2,
    "creaNum":20,
    "deg":true
},
{
    "id":84,
    "result":"Scrap",
    "cost":{"Compo3":4,"Energie":2},
    "compReq":{"tri":2,"const":1,"ind":1},
    "bldReq":["Décharge","Chaîne de montage"],
    "batch":3,
    "deg":true
},
{
    "id":63,
    "result":"Scrap",
    "cost":{"Bugium":3,"Swarmine":2,"Larvium":1,"Aranium":1,"Energie":2},
    "compReq":{"ca":1,"ind":3,"tri":1},
    "bldReq":["Recyclab"],
    "batch":7,
    "deg":true
},
{
    "id":5,
    "result":"Transorb",
    "cost":{"Electros":200,"Bore":500,"Carbone":1000,"Nickel":500,"Titane":500,"Compo3":500,"Energie":200},
    "compReq":{"energ":2,"mat":3,"ind":2},
    "bldReq":["Laboratoire","Usine","Soute"],
    "batch":1,
    "creaNum":1
},

Scrap
Plomb
Fer
Carbone
Silicium
Cuivre
Calcium
APinc
Phosphore
Soufre
Nickel
Potassium
Aluminium
Bore
Titane
Cobalt
Tungstène
Plutonium
Uranium
Platine
Or
Mercure
Rhodium
Eau
Hydrocarbure
Huile
Végétaux
Bois
Oxygène
Hydrogène
Azote
Chlore
Argon
Hélium
Dunium
Timonium
Salite
Plastanium
Uridium
Nanite
Adamantium
Pyratol
Octiron
Atium
Bugium
Swarmine
Larvium
Aranium
Mendium
Creatite
Slime
Noxis
Germium
Wingium
Blendium
Mephitis
Egidium
Bossium
Pyrus
Energie
Electros
Batteries
Fuel
Explosifs
Transorb
Compo1
Compo2
Compo3



Mine
Pompe
Derrick
Comptoir
Poudrière
Silo
Réserve
Garage
Atelier
Chaîne de montage
Usine
Aérodocks
Armurerie
Arsenal
Usine d'armement
Infirmerie
Hôpital
Poste radio
Centre de com
QG
Camp d'entraînement
Décharge
Centre de tri
Recyclab
Laboratoire
Centre de recherches
Générateur
Centrale solaire
Centrale géothermique
Crameur
Centrale nucléaire
Centrale SMR
Champ de force
Dôme
Pilône
Bar
Cantine

=CONCATENATE("""","bldReq","""",":[","""",O2,"""",",","""",P2,"""",",","""",Q2,"""","]")
